{"version":3,"sources":["Components/Navbar.js","Components/TexadaModal.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","TexadaEntriesSchema","Yup","shape","description","required","min","max","datetime","default","Date","typeError","longitude","latitude","elevation","TexadaModal","handleSubmit","console","log","props","initialValues","validationSchema","touched","handleChange","handleBlur","isValidating","isSubmitting","isValid","values","errors","Modal","show","onHide","handleClose","Header","closeButton","Title","onSubmit","Body","Row","Group","as","Col","md","Label","value","onChange","onBlur","id","placeholder","name","component","htmlFor","type","Control","Footer","Button","variant","onClick","e","submitEntry","MainComponent","handleChangeDescription","setState","target","handleChangeDateTime","handleChangeLongitude","handleChangeLatitude","handleChangeElevation","toast","state","formdata","success","searchingFor","term","x","index","toLowerCase","includes","filter","this","handleShowForActualModal","data","filterable","defaultFilterMethod","row","String","columns","accessor","d","filterMethod","rows","matchSorter","keys","filterAll","Cell","style","textAlign","confirmAlert","customUI","onClose","splice","info","defaultPageSize","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be0c0c74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Texada\n          </Link>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Form as BForm, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst TexadaEntriesSchema = Yup.object().shape({\n  description: Yup.string()\n    .required(\"Description is needed\")\n    .min(10, \"please provide more than 5 characters\")\n    .max(50, \"Can't be more than 50 characters\"),\n  datetime: Yup.string()\n    .default(() => new Date())\n    .required(\"Date is needed\")\n    .typeError(\"That doesn't look like a proper date time\"),\n  longitude: Yup.number()\n    .required(\"Longitude is needed\")\n    .typeError(\"That doesn't look like a number\"),\n  latitude: Yup.number()\n    .required(\"Latitude is needed\")\n    .typeError(\"That doesn't look like a number\"),\n  elevation: Yup.number()\n    .required(\"Elevation is needed\")\n    .min(2, \"Minimum of 2 is needed\")\n    .typeError(\"Elevation has to be a number\")\n});\n\nclass TexadaModal extends Component {\n  handleSubmit = () => {\n    console.log(\"handling submit\");\n  };\n  render(props) {\n    return (\n      <Formik\n        initialValues={{\n          description: \"\",\n          datetime: \"\",\n          longitude: \"\",\n          latitude: \"\",\n          elevation: \"\"\n        }}\n        validationSchema={TexadaEntriesSchema}\n      >\n        {({\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isValidating,\n          isSubmitting,\n          isValid,\n          values,\n          errors\n        }) => (\n          <div>\n            {/* <Debug /> */}\n            <Modal show={this.props.show} onHide={this.props.handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Add New Item</Modal.Title>\n              </Modal.Header>\n              <Form onSubmit={handleSubmit}>\n                <Modal.Body>\n                  <BForm.Row>\n                    <BForm.Group as={Col} md=\"6\">\n                      <BForm.Label>Description</BForm.Label>\n                      <Field\n                        value={this.props.description}\n                        onChange={\n                          (e => this.props.handleChangeDescription(e),\n                          handleChange)\n                        }\n                        onBlur={handleBlur}\n                        className=\"form-control\"\n                        id=\"description\"\n                        placeholder=\"Description\"\n                        name=\"description\"\n                        className={`form-control ${\n                          touched.description && errors.description\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"description\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BForm.Group>\n                    <BForm.Group as={Col} md=\"6\">\n                      <BForm.Label htmlFor=\"datetime\">Date Time</BForm.Label>\n                      <input\n                        type=\"datetime-local\"\n                        value={this.props.datetime}\n                        onChange={\n                          (e => this.props.handleChangeDateTime(e),\n                          handleChange)\n                        }\n                        placeholder=\"Date and Time\"\n                        onBlur={handleBlur}\n                        id=\"datetime\"\n                        name=\"datetime\"\n                        className={`form-control ${\n                          touched.datetime && errors.datetime\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"datetime\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BForm.Group>\n                  </BForm.Row>\n                  <BForm.Row>\n                    <BForm.Group as={Col} md=\"6\">\n                      <BForm.Label htmlFor=\"longitude\">Longitude </BForm.Label>\n                      <Field\n                        type=\"text\"\n                        name=\"longitude\"\n                        id=\"longitude\"\n                        placeholder=\"Longitude\"\n                        value={this.props.longitude}\n                        onChange={\n                          (e => this.props.handleChangeLongitude(e),\n                          handleChange)\n                        }\n                        onBlur={handleBlur}\n                        className={`form-control ${\n                          touched.longitude && errors.longitude\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"longitude\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BForm.Group>\n                    <BForm.Group as={Col} md=\"6\">\n                      <BForm.Label htmlFor=\"latitude\">Latitude</BForm.Label>\n                      <BForm.Control\n                        //type=\"text\"\n                        id=\"latitude\"\n                        placeholder=\"Latitude\"\n                        value={this.props.latitude}\n                        name=\"latitude\"\n                        onChange={\n                          (e => this.props.handleChangeLatitude(e),\n                          handleChange)\n                        }\n                        onBlur={handleBlur}\n                        className={`form-control ${\n                          touched.latitude && errors.latitude\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"latitude\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BForm.Group>\n                  </BForm.Row>\n                  <BForm.Row>\n                    {/* <BForm.Group as={Col} md=\"6\"></BForm.Group> */}\n                    <BForm.Group as={Col} md=\"12\">\n                      <label htmlFor=\"elevation\">Elevation</label>\n                      <input\n                        type=\"text\"\n                        name=\"elevation\"\n                        value={this.props.elevation}\n                        onChange={\n                          (e => this.props.handleChangeElevation(e),\n                          handleChange)\n                        }\n                        onBlur={handleBlur}\n                        id=\"elevation\"\n                        className={`form-control ${\n                          touched.elevation && errors.elevation\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"elevation\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BForm.Group>\n                  </BForm.Row>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={e => this.props.handleClose()}\n                  >\n                    Close\n                  </Button>\n                  <ToastContainer />\n                  <button\n                    className=\"btn btn-primary\"\n                    // disabled={!isValid}\n                    onClick={e =>\n                      this.props.submitEntry(\n                        isValidating,\n                        isSubmitting,\n                        isValid,\n                        values,\n                        errors\n                      )\n                    }\n                  >\n                    Add Entry\n                    {/* {isSubmitting ? \"Please wait...\" : \"Submit\"} */}\n                  </button>\n                </Modal.Footer>\n              </Form>\n            </Modal>\n          </div>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default TexadaModal;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport TexadaModal from \"./TexadaModal\";\nimport matchSorter from \"match-sorter\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../Alert.css\";\nclass MainComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      description: \"\",\n      datetime: \"\",\n      longitude: \"\",\n      latitude: \"\",\n      elevation: \"\",\n      filter: \"\",\n      formdata: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      formdata: [\n        {\n          id: 1,\n          description: \"Cesna 120\",\n          datetime: \"2016-10-12T12:00:00-05:00\",\n          longitude: \"43.2583264\",\n          latitude: \"-81.8149807\",\n          elevation: \"500\"\n        },\n        {\n          id: 1,\n          description: \"Cesna 120\",\n          datetime: \"2016-10-13T12:00:00-05:00\",\n          longitude: \"42.559112\",\n          latitude: \"-79.286693\",\n          elevation: \"550\"\n        },\n        {\n          id: 1,\n          description: \"Cesna 120\",\n          datetime: \"2016-10-14T12:00:00-05:00\",\n          longitude: \"43.559112\",\n          latitude: \"-85.286693\",\n          elevation: \"600\"\n        },\n        {\n          id: 1,\n          description: \"Cesna 120\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"42.3119735\",\n          latitude: \"-83.0941179\",\n          elevation: \"650\"\n        },\n        {\n          id: 2,\n          description: \"DC-6 Twin Otter\",\n          datetime: \"2016-10-12T12:00:00-05:00\",\n          longitude: \"43.459112\",\n          latitude: \"-80.386693\",\n          elevation: \"500\"\n        },\n        {\n          id: 2,\n          description: \"DC-6 Twin Otter\",\n          datetime: \"2016-10-13T12:00:00-05:00\",\n          longitude: \"42.459112\",\n          latitude: \"-79.386693\",\n          elevation: \"550\"\n        },\n        {\n          id: 2,\n          description: \"DC-6 Twin Otter\",\n          datetime: \"2016-10-14T12:00:00-05:00\",\n          longitude: \"43.459112\",\n          latitude: \"-85.386693\",\n          elevation: \"450\"\n        },\n        {\n          id: 2,\n          description: \"DC-6 Twin Otter\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"44.459112\",\n          latitude: \"-81.386693\",\n          elevation: \"400\"\n        },\n        {\n          id: 3,\n          description: \"Piper M600\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"44.459112\",\n          latitude: \"-81.386693\",\n          elevation: \"500\"\n        },\n        {\n          id: 3,\n          description: \"Piper M600\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"45.459112\",\n          latitude: \"-82.386693\",\n          elevation: \"600\"\n        },\n        {\n          id: 3,\n          description: \"Piper M600\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"46.459112\",\n          latitude: \"-83.386693\",\n          elevation: \"700\"\n        },\n        {\n          id: 3,\n          description: \"Piper M600\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"47.459112\",\n          latitude: \"-84.386693\",\n          elevation: \"800\"\n        },\n        {\n          id: 3,\n          description: \"Piper M600\",\n          datetime: \"2016-10-15T12:00:00-05:00\",\n          longitude: \"48.459112\",\n          latitude: \"-85.386693\",\n          elevation: \"900\"\n        },\n        {\n          id: 4,\n          description: \"Art Boom 6500\",\n          datetime: \"2017-08-04T14:20:38-05:00\",\n          longitude: \"43.7634618\",\n          latitude: \"-79.3688191\",\n          elevation: \"800\"\n        },\n        {\n          id: 4,\n          description: \"Art Boom 6500\",\n          datetime: \"2017-08-04T16:20:38-05:00\",\n          longitude: \"43.8001468\",\n          latitude: \"-79.2342365\",\n          elevation: \"400\"\n        },\n        {\n          id: 4,\n          description: \"Art Boom 6500\",\n          datetime: \"2017-08-04T14:20:38-05:00\",\n          longitude: \"44.51165\",\n          latitude: \"-80.1239422\",\n          elevation: \"550\"\n        },\n        {\n          id: 4,\n          description: \"Art Boom 6500\",\n          datetime: \"2017-08-04T14:20:38-05:00\",\n          longitude: \"43.1501439\",\n          latitude: \"-79.0504945\",\n          elevation: \"300\"\n        }\n      ]\n    });\n  }\n  handleChangeDescription = e => {\n    this.setState({\n      description: e.target.value\n    });\n  };\n  handleChangeDateTime = e => {\n    this.setState({\n      datetime: e.target.value\n    });\n  };\n\n  handleChangeLongitude = e => {\n    this.setState({\n      longitude: e.target.value\n    });\n  };\n  handleChangeLatitude = e => {\n    this.setState({\n      latitude: e.target.value\n    });\n  };\n  handleChangeElevation = e => {\n    this.setState({\n      elevation: e.target.value\n    });\n  };\n\n  handleClose = (e, errors) => {\n    this.setState({\n      show: false\n    });\n    toast(\"You didn't add any new entries...\");\n  };\n\n  handleShowForActualModal() {\n    this.setState({\n      show: true\n    });\n  }\n\n  submitEntry = (isValidating, isSubmitting, isValid, values, errors) => {\n    console.log(\n      \"setSubmitting is\",\n      isSubmitting,\n      \"isValid is\",\n      isValid,\n      \"Erros are\",\n      errors,\n      \"values are\",\n      values\n    );\n\n    if (isValid && values.description !== \"\") {\n      //This needs to be handled in a better way\n      console.log(\"Form Submitting\");\n      this.state.show = false;\n      this.setState({\n        formdata: [\n          ...this.state.formdata,\n          {\n            description: values.description,\n            datetime: values.datetime,\n            longitude: values.longitude,\n            latitude: values.latitude,\n            elevation: values.elevation\n          }\n        ]\n      });\n      toast.success(\"You have successfullt added a new entry...\");\n      values.description = \"\";\n      values.datetime = \"\";\n      values.longitude = \"\";\n      values.latitude = \"\";\n      values.elevation = \"\";\n\n      errors.description = \"\";\n      errors.datetime = \"\";\n      errors.longitude = \"\";\n      errors.latitude = \"\";\n      errors.elevation = \"\";\n    } else {\n      console.log(\"Not submitting, form is invalid\");\n    }\n  };\n  searchingFor = term => {\n    return function(x, index) {\n      return x.description\n        .toLowerCase()\n        .includes(term[index].description.toLowerCase());\n    };\n  };\n\n  render() {\n    const { formdata } = this.state;\n    return (\n      <div className=\"container\">\n        {/* <button onClick={this.notify}>Notify !</button> */}\n        <ToastContainer />\n        <div className=\"row add-content-head\">\n          <div className=\"col-sm-10\"></div>\n          <div className=\"col-sm-2\">\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.handleShowForActualModal()}\n            >\n              Add an Entry\n            </button>\n          </div>\n        </div>\n\n        <ReactTable\n          data={formdata}\n          filterable\n          defaultFilterMethod={(filter, row) =>\n            String(row[filter.id]) === filter.value\n          }\n          columns={[\n            {\n              Header: \"Texada Sample Data\",\n              columns: [\n                {\n                  Header: \"Description\",\n                  id: \"description\",\n                  accessor: d => d.description,\n                  filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"description\"] }),\n                  filterAll: true\n                },\n\n                {\n                  Header: \"Longitude\",\n                  id: \"longitude\",\n                  accessor: d => d.longitude,\n                  filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"longitude\"] }),\n                  filterAll: true\n                },\n                {\n                  Header: \"Latitude\",\n                  id: \"latitude\",\n                  accessor: d => d.latitude,\n                  filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"latitude\"] }),\n                  filterAll: true\n                },\n                {\n                  Header: \"Elevation\",\n                  id: \"elevation\",\n                  accessor: d => d.elevation,\n                  filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"elevation\"] }),\n                  filterAll: true\n                },\n                {\n                  Header: \"Date Time\",\n                  id: \"datetime\",\n                  accessor: d => d.datetime,\n                  filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"datetime\"] }),\n                  filterAll: true\n                },\n                {\n                  Header: \"Delete?\",\n                  Cell: row => (\n                    <div\n                      style={{ textAlign: \"center\" }}\n                      className=\"btn btn-danger\"\n                      onClick={() => {\n                        confirmAlert({\n                          customUI: ({ onClose }) => {\n                            return (\n                              <div className=\"custom-ui\">\n                                <h1>Are you sure?</h1>\n                                <p>You want to delete this entry?</p>\n                                <button onClick={onClose}>No</button>\n                                <button\n                                  onClick={() => {\n                                    let data = this.state.formdata;\n                                    data.splice(row.index, 1);\n                                    this.setState({ data });\n                                    onClose();\n                                    toast.info(\"So you deleted an entry...\");\n                                  }}\n                                >\n                                  Yes, Delete it!\n                                </button>\n                              </div>\n                            );\n                          }\n                        });\n                      }}\n                    >\n                      Remove\n                    </div>\n                  ),\n                  filterAll: false\n                }\n              ]\n            }\n          ]}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n        />\n        <TexadaModal\n          show={this.state.show}\n          props={this.state}\n          handleChangeDescription={this.handleChangeDescription}\n          handleChangeDateTime={this.handleChangeDateTime}\n          handleChangeLongitude={this.handleChangeLongitude}\n          handleChangeLatitude={this.handleChangeLatitude}\n          handleChangeElevation={this.handleChangeElevation}\n          submitEntry={this.submitEntry}\n          handleClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainComponent;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport MainComponent from \"./Components/MainComponent\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar></Navbar>\n        <Switch>\n          <Route path=\"/\" component={MainComponent}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}